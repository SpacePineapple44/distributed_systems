version: '3.8'

services:
  consul:
    image: hashicorp/consul:1.10
    container_name: consul
    ports:
      - "8500:8500" # HTTP API
      - "8600:8600/tcp" # DNS API
      - "8600:8600/udp" # DNS API
    command: "agent -server -bootstrap-expect 1 -ui -client=0.0.0.0"
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 10s
      timeout: 5s
      retries: 5

  master:
    build: ./master # Docker Compose знайде Dockerfile у теці master
    container_name: master
    environment:
      - MASTER_PORT=5000
      - CONSUL_HOST=consul # Ім'я сервісу Consul у мережі Docker Compose
    ports:
      - "5000:5000" # Мапуємо порт 5000 контейнера на порт 5000 хост-машини
    depends_on: # Залежність: master запуститься лише після того, як consul буде healthy
      consul:
        condition: service_healthy
    healthcheck: # Перевірка стану для Master'а
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  secondary1:
    build: ./secondary # Docker Compose знайде Dockerfile у теці secondary
    container_name: secondary1
    environment:
      - SECONDARY_PORT=5001
      - CONSUL_HOST=consul
      - REPLICATION_DELAY_SEC=0 # Залиш 0 для звичайного режиму, зміни на 5 для тестування затримки
    ports:
      - "5001:5001"
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  secondary2:
    build: ./secondary
    container_name: secondary2
    environment:
      - SECONDARY_PORT=5002
      - CONSUL_HOST=consul
      - REPLICATION_DELAY_SEC=0
    ports:
      - "5002:5002"
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 10s
      timeout: 5s
      retries: 5
